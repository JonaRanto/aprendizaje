// <auto-generated />
using System;
using AlimentoMascotas.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AlimentoMascotas.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220308161722_MyMigration2")]
    partial class MyMigration2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AlimentoMascotas.Entities.EAditivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Aditivo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Vitamina A"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Vitamina D3"
                        },
                        new
                        {
                            Id = 3,
                            Name = "E1 (Hierro)"
                        },
                        new
                        {
                            Id = 4,
                            Name = "E2 (Yodo)"
                        },
                        new
                        {
                            Id = 5,
                            Name = "E4 (Cobre)"
                        },
                        new
                        {
                            Id = 6,
                            Name = "E5 (Manganeso)"
                        },
                        new
                        {
                            Id = 7,
                            Name = "E6 (Zinc)"
                        },
                        new
                        {
                            Id = 8,
                            Name = "E8 (Selenio)"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Conservantes"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Antioxidantes"
                        });
                });

            modelBuilder.Entity("AlimentoMascotas.Entities.EAditivoEnAlimento", b =>
                {
                    b.Property<int>("AditivoId")
                        .HasColumnType("int");

                    b.Property<int>("AlimentoId")
                        .HasColumnType("int");

                    b.Property<decimal>("QuantityGra")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("QuantityUI")
                        .HasColumnType("int");

                    b.HasKey("AditivoId", "AlimentoId");

                    b.HasIndex("AlimentoId");

                    b.ToTable("AditivoEnAlimento");
                });

            modelBuilder.Entity("AlimentoMascotas.Entities.EAlimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EspecieId")
                        .HasColumnType("int");

                    b.Property<int>("EtapaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EspecieId");

                    b.HasIndex("EtapaId");

                    b.HasIndex("MarcaId");

                    b.ToTable("Alimento");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EspecieId = 2,
                            EtapaId = 1,
                            LastUpdate = new DateTime(2022, 3, 8, 16, 17, 21, 785, DateTimeKind.Utc).AddTicks(2237),
                            MarcaId = 1,
                            Name = "Alimento Raza para perros adultos sabor Pollo, Carne, Cereales y Arroz"
                        });
                });

            modelBuilder.Entity("AlimentoMascotas.Entities.EAnalitico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Analitico");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Proteina"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Grasa"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ceniza"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Fibras"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Ácidos grasos omega"
                        },
                        new
                        {
                            Id = 6,
                            Name = "EPA/DHA"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Humedad"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Calcio"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Fósforo"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Energía"
                        });
                });

            modelBuilder.Entity("AlimentoMascotas.Entities.EAnaliticoEnAlimento", b =>
                {
                    b.Property<int>("AnaliticoId")
                        .HasColumnType("int");

                    b.Property<int>("AlimentoId")
                        .HasColumnType("int");

                    b.Property<decimal>("QuantityGra")
                        .HasColumnType("decimal(7,2)");

                    b.Property<decimal>("QuantityPer")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("AnaliticoId", "AlimentoId");

                    b.HasIndex("AlimentoId");

                    b.ToTable("AnaliticoEnAlimento");

                    b.HasData(
                        new
                        {
                            AnaliticoId = 1,
                            AlimentoId = 1,
                            QuantityGra = 0m,
                            QuantityPer = 21m
                        },
                        new
                        {
                            AnaliticoId = 2,
                            AlimentoId = 1,
                            QuantityGra = 0m,
                            QuantityPer = 9m
                        },
                        new
                        {
                            AnaliticoId = 4,
                            AlimentoId = 1,
                            QuantityGra = 0m,
                            QuantityPer = 3.5m
                        },
                        new
                        {
                            AnaliticoId = 3,
                            AlimentoId = 1,
                            QuantityGra = 0m,
                            QuantityPer = 10m
                        },
                        new
                        {
                            AnaliticoId = 7,
                            AlimentoId = 1,
                            QuantityGra = 0m,
                            QuantityPer = 12m
                        },
                        new
                        {
                            AnaliticoId = 8,
                            AlimentoId = 1,
                            QuantityGra = 0m,
                            QuantityPer = 2m
                        },
                        new
                        {
                            AnaliticoId = 9,
                            AlimentoId = 1,
                            QuantityGra = 0m,
                            QuantityPer = 1.3m
                        },
                        new
                        {
                            AnaliticoId = 10,
                            AlimentoId = 1,
                            QuantityGra = 3200m,
                            QuantityPer = 0m
                        });
                });

            modelBuilder.Entity("AlimentoMascotas.Entities.EEspecie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Especie");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Gato"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Perro"
                        });
                });

            modelBuilder.Entity("AlimentoMascotas.Entities.EEtapa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Etapa");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Adulto"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Cachorro"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Senior"
                        });
                });

            modelBuilder.Entity("AlimentoMascotas.Entities.EIngrediente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ingrediente");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Res"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Pollo"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Salmón"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Cerdo"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Harina de res"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Harina de pollo"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Harina de salmón"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Harina de cerdo"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Subproducto de res"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Subproducto de pollo"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Subproducto de salmón"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Subproducto de cerdo"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Maíz"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Proteina de ave deshidratada"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Harina de maíz"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Grasas animales"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Proteina de cerdi deshidratada"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Hidrolizado de proteinas animales"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Pulpa de remolacha"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Gluten de maíz"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Minerales"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Aceite de pescado"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Aceite de soja"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Levaduras"
                        },
                        new
                        {
                            Id = 25,
                            Description = "Fuente de glucosamina",
                            Name = "Hidrolizado de crustáceo"
                        },
                        new
                        {
                            Id = 26,
                            Description = "Fuente de codroitina",
                            Name = "Hidrolizado de cartílago"
                        });
                });

            modelBuilder.Entity("AlimentoMascotas.Entities.EIngredienteEnAlimento", b =>
                {
                    b.Property<int>("IngredienteId")
                        .HasColumnType("int");

                    b.Property<int>("AlimentoId")
                        .HasColumnType("int");

                    b.Property<decimal>("QuantityPer")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("IngredienteId", "AlimentoId");

                    b.HasIndex("AlimentoId");

                    b.ToTable("IngredienteEnAlimento");
                });

            modelBuilder.Entity("AlimentoMascotas.Entities.EMarca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Marca");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Raza"
                        });
                });

            modelBuilder.Entity("AlimentoMascotas.Entities.ESize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Size")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.ToTable("Size");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Size = 1.5m
                        },
                        new
                        {
                            Id = 2,
                            Size = 3m
                        },
                        new
                        {
                            Id = 3,
                            Size = 8m
                        },
                        new
                        {
                            Id = 4,
                            Size = 15m
                        },
                        new
                        {
                            Id = 5,
                            Size = 21m
                        });
                });

            modelBuilder.Entity("AlimentoMascotas.Entities.ESizeEnAlimento", b =>
                {
                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.Property<int>("AlimentoId")
                        .HasColumnType("int");

                    b.HasKey("SizeId", "AlimentoId");

                    b.HasIndex("AlimentoId");

                    b.ToTable("SizeEnAlimento");

                    b.HasData(
                        new
                        {
                            SizeId = 1,
                            AlimentoId = 1
                        },
                        new
                        {
                            SizeId = 2,
                            AlimentoId = 1
                        },
                        new
                        {
                            SizeId = 3,
                            AlimentoId = 1
                        },
                        new
                        {
                            SizeId = 4,
                            AlimentoId = 1
                        },
                        new
                        {
                            SizeId = 5,
                            AlimentoId = 1
                        });
                });

            modelBuilder.Entity("AlimentoMascotas.Entities.EAditivoEnAlimento", b =>
                {
                    b.HasOne("AlimentoMascotas.Entities.EAditivo", "Aditivo")
                        .WithMany("Alimentos")
                        .HasForeignKey("AditivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlimentoMascotas.Entities.EAlimento", "Alimento")
                        .WithMany("Aditivos")
                        .HasForeignKey("AlimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aditivo");

                    b.Navigation("Alimento");
                });

            modelBuilder.Entity("AlimentoMascotas.Entities.EAlimento", b =>
                {
                    b.HasOne("AlimentoMascotas.Entities.EEspecie", "Especie")
                        .WithOne("Alimento")
                        .HasForeignKey("AlimentoMascotas.Entities.EAlimento", "EspecieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlimentoMascotas.Entities.EEtapa", "Etapa")
                        .WithOne("Alimento")
                        .HasForeignKey("AlimentoMascotas.Entities.EAlimento", "EtapaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlimentoMascotas.Entities.EMarca", "Marca")
                        .WithOne("Alimento")
                        .HasForeignKey("AlimentoMascotas.Entities.EAlimento", "MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especie");

                    b.Navigation("Etapa");

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("AlimentoMascotas.Entities.EAnaliticoEnAlimento", b =>
                {
                    b.HasOne("AlimentoMascotas.Entities.EAlimento", "Alimento")
                        .WithMany("Analiticos")
                        .HasForeignKey("AlimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlimentoMascotas.Entities.EAnalitico", "Analitico")
                        .WithMany("Alimentos")
                        .HasForeignKey("AnaliticoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alimento");

                    b.Navigation("Analitico");
                });

            modelBuilder.Entity("AlimentoMascotas.Entities.EIngredienteEnAlimento", b =>
                {
                    b.HasOne("AlimentoMascotas.Entities.EAlimento", "Alimento")
                        .WithMany("Ingredientes")
                        .HasForeignKey("AlimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlimentoMascotas.Entities.EIngrediente", "Ingrediente")
                        .WithMany("Alimentos")
                        .HasForeignKey("IngredienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alimento");

                    b.Navigation("Ingrediente");
                });

            modelBuilder.Entity("AlimentoMascotas.Entities.ESizeEnAlimento", b =>
                {
                    b.HasOne("AlimentoMascotas.Entities.EAlimento", "Alimento")
                        .WithMany("Sizes")
                        .HasForeignKey("AlimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlimentoMascotas.Entities.ESize", "Size")
                        .WithMany("Alimentos")
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alimento");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("AlimentoMascotas.Entities.EAditivo", b =>
                {
                    b.Navigation("Alimentos");
                });

            modelBuilder.Entity("AlimentoMascotas.Entities.EAlimento", b =>
                {
                    b.Navigation("Aditivos");

                    b.Navigation("Analiticos");

                    b.Navigation("Ingredientes");

                    b.Navigation("Sizes");
                });

            modelBuilder.Entity("AlimentoMascotas.Entities.EAnalitico", b =>
                {
                    b.Navigation("Alimentos");
                });

            modelBuilder.Entity("AlimentoMascotas.Entities.EEspecie", b =>
                {
                    b.Navigation("Alimento");
                });

            modelBuilder.Entity("AlimentoMascotas.Entities.EEtapa", b =>
                {
                    b.Navigation("Alimento");
                });

            modelBuilder.Entity("AlimentoMascotas.Entities.EIngrediente", b =>
                {
                    b.Navigation("Alimentos");
                });

            modelBuilder.Entity("AlimentoMascotas.Entities.EMarca", b =>
                {
                    b.Navigation("Alimento");
                });

            modelBuilder.Entity("AlimentoMascotas.Entities.ESize", b =>
                {
                    b.Navigation("Alimentos");
                });
#pragma warning restore 612, 618
        }
    }
}
